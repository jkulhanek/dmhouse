# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package
  
on:
  workflow_dispatch:
  push:
    branches:    
      - 'releases/**'
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        sudo apt-get -y update && DEBIAN_FRONTEND="noninteractive" sudo apt-get -y install tzdata && \
        sudo apt-get -y install python3.8-dev g++ unzip zip curl gnupg python3-numpy libsdl2-dev libosmesa6-dev gettext && \
        curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > /tmp/bazel.gpg && \
        sudo mv /tmp/bazel.gpg /etc/apt/trusted.gpg.d/ && \
        echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list && \
        sudo apt -y update && sudo apt -y install bazel && \
        curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && \
        sudo python3.8 /tmp/get-pip.py && \
        sudo python3.8 -m pip install setuptools
        sudo python3.8 -m pip install --upgrade pip
        sudo python3.8 -m pip install setuptools wheel twine
        echo "$(whereis python3.8)"
        echo "$(python3.8 -c 'import numpy as np; print(np.get_include())')"
        bazel build -c opt --define graphics=osmesa_or_egl //python/pip_package:build_pip_package
        ./bazel-bin/python/pip_package/build_pip_package /tmp/dmlab_pkg
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |        
        python3.8 setup.py sdist bdist_wheel
        python3.8 -m twine upload /tmp/dmlab_pkg/*
